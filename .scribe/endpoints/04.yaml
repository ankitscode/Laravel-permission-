name: 'doctor Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/doctorprofiledelete
    metadata:
      groupName: 'doctor Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Delete the authenticated doctor's profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 8g1kcZa5vha6Eed4P3fV6bD'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the doctor to delete.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: enim
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": true,
              "message": "doctor deleted successfully",
              "data": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "petname": "Buddy",
                  "breed": "Labrador Retriever",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "error": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Something went wrong."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8g1kcZa5vha6Eed4P3fV6bD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/doctorprofile
    metadata:
      groupName: 'doctor Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Retrieve the authenticated doctor's profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer ED1Vv6fhbeda3kPZ8645acg'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": true,
              "data": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "degree": "mbbs",
                  "treatment": "legbreak",
                  "patient_name": "buuzo",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              },
              "message": "get doctor profile successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ED1Vv6fhbeda3kPZ8645acg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/doctorprofileupdate
    metadata:
      groupName: 'doctor Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update the authenticated doctor's profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 5DVh4k6aacEP1veZbf68g3d'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: "valid email address The email of the doctor. Must be unique (ignoring current doctor's ID)."
        required: true
        example: cesar21@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      patient_name:
        name: patient_name
        description: 'The patient_name(pet name).'
        required: true
        example: odit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      degree:
        name: degree
        description: 'The degree of the doctor.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      treatment:
        name: treatment
        description: 'The treatment name for the pet.'
        required: true
        example: sint
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: ea
      email: cesar21@example.com
      patient_name: odit
      degree: et
      treatment: sint
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": true,
              "message": "doctor updated successfully",
              "data": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "petname": "Buddy",
                  "breed": "Labrador Retriever",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "error": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": {

                      "invalid data format."

              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Something went wrong."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5DVh4k6aacEP1veZbf68g3d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/doctorprofilecreate
    metadata:
      groupName: 'doctor Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Createe the authenticated doctor's profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 456gfa3ePZhdvDc1kE68Vab'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the doctor.'
        required: true
        example: consectetur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: "valid email address The email of the doctor. Must be unique (ignoring current doctor's ID)."
        required: true
        example: brakus.susanna@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      patient_name:
        name: patient_name
        description: 'The patient_name(pet name).'
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      degree:
        name: degree
        description: 'The degree of the doctor.'
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      treatment:
        name: treatment
        description: 'The treatment name for the pet.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: consectetur
      email: brakus.susanna@example.com
      patient_name: non
      degree: alias
      treatment: aut
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": true,
              "message": "doctor updated successfully",
              "data": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "petname": "Buddy",
                  "breed": "Labrador Retriever",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "error": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": {

                      "invalid data format."

              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Something went wrong."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 456gfa3ePZhdvDc1kE68Vab'
    controller: null
    method: null
    route: null
    custom: []
