## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User Management'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/profile
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Retrieve the authenticated user's profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer cDa4P6vh61E3b8daf5gVkZe'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": true,
              "data": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "image" :  "144875860.jpg",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              },
              "message": "get user profile successfully"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cDa4P6vh61E3b8daf5gVkZe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profileupdate
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Update the authenticated user's profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer V1ba6a4DkhZvgP35defEc68'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: iste
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image:
        name: image
        description: 'Must be an image. Must not be greater than 6048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: |-
          valid email address The email of the user. Must be unique (ignoring current user's ID).
          * @bodyParam image File required the image should be jpg,jpeg,svg,png.
        required: true
        example: herzog.unique@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: iste
      email: herzog.unique@example.com
    fileParameters:
      image: null
    responses:
      -
        status: 200
        content: |-
          {
              "status": true,
              "message": "User updated successfully",
              "data": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                   "image": "1777675756.jpg",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "error": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": {

                      "invalid data format."

              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Something went wrong."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V1ba6a4DkhZvgP35defEc68'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profiledelete
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Delete the authenticated user's profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer g6a65kvhcP48Df1ZbaVEe3d'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user to delete.'
        required: true
        example: suscipit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: suscipit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": true,
              "message": "User deleted successfully",
              "data": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "error": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Something went wrong."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g6a65kvhcP48Df1ZbaVEe3d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/profilecreate
    metadata:
      groupName: 'User Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Created the authenticated user's profile."
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer EcdVZfPb6ke4g53hv8a1aD6'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: accusamus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      image:
        name: image
        description: 'the image should be jpg,jpeg,svg,png.'
        required: true
        example: et
        type: File
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: "valid email address The email of the user. Must be unique (ignoring current user's ID)."
        required: true
        example: ycassin@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: accusamus
      image: et
      email: ycassin@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "status": true,
              "message": "User Created successfully",
              "data": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "image':17777868.jpg,
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "error": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": {

                      "invalid data format."

              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "error": "Something went wrong."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EcdVZfPb6ke4g53hv8a1aD6'
    controller: null
    method: null
    route: null
    custom: []
