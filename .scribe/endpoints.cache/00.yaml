## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: user
      subgroupDescription: ''
      title: 'Log in a user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer dk5fh46ZgPbVa3eEvD816ac'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'valid email address The email of the user.'
        required: true
        example: annabell.rogahn@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'min:8 The password of the user.'
        required: true
        example: ruC|@LNV
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: annabell.rogahn@example.org
      password: ruC|@LNV
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "token": "eyJhbGciOiAiSFMyNTYiLCJraWQiOiAiYWMwMDZmMDYtMGM0ZC00MTQ5LWE5MTYtYjEwYzQ2N2YzZmMwIn0.eyJqdGkiOiAibG9naW4tY29",
              "user": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "message": "Failed to authenticate."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dk5fh46ZgPbVa3eEvD816ac'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: user
      subgroupDescription: ''
      title: 'Register a new user.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer e8g16kbD34Zhd6Pf5aVcvEa'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: enim
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'valid email address The email of the user.'
        required: true
        example: reggie.hagenes@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'min:8 The password of the user.'
        required: true
        example: "--<a,IK'Kk%G2"
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: enim
      email: reggie.hagenes@example.com
      password: "--<a,IK'Kk%G2"
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "user": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              },
              "token": "eyJhbGciOiAiSFMyNTYiLCJraWQiOiAiYWMwMDZmMDYtMGM0ZC00MTQ5LWE5MTYtYjEwYzQ2N2YzZmMwIn0.eyJqdGkiOiAibG9naW4tY29"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": {
                  "email": [
                      "The email has already been taken."
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e8g16kbD34Zhd6Pf5aVcvEa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/doctorregister
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: doctor
      subgroupDescription: ''
      title: 'Register a new Doctor.'
      description: 'This endpoint lets you register  a new user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer ghZv6dfDkEP6V431b8ae5ca'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the user.'
        required: true
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: 'valid email address The email of the user.'
        required: true
        example: kbartoletti@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'min:8 The password of the user.'
        required: true
        example: '=%;S6Oo!MzxJv|SD'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: nam
      email: kbartoletti@example.com
      password: '=%;S6Oo!MzxJv|SD'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "doctor": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              },
              "token": "eyJhbGciOiAiSFMyNTYiLCJraWQiOiAiYWMwMDZmMDYtMGM0ZC00MTQ5LWE5MTYtYjEwYzQ2N2YzZmMwIn0.eyJqdGkiOiAibG9naW4tY29"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
              "errors": {
                  "email": [
                      "The email has already been taken."
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ghZv6dfDkEP6V431b8ae5ca'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/doctorlogin
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: doctor
      subgroupDescription: ''
      title: 'Log in a doctor.'
      description: 'This endpoint lets you login as authenticated user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer 5vfaaVhdE6Pe38k1DZb4g6c'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'valid email address The email of the user.'
        required: true
        example: jammie21@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'min:8 The password of the user.'
        required: true
        example: 5Z2g%.M
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: jammie21@example.com
      password: 5Z2g%.M
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "success": true,
              "token": "eyJhbGciOiAiSFMyNTYiLCJraWQiOiAiYWMwMDZmMDYtMGM0ZC00MTQ5LWE5MTYtYjEwYzQ2N2YzZmMwIn0.eyJqdGkiOiAibG9naW4tY29",
              "doctor": {
                  "name": "John Doe",
                  "email": "johndoe@example.com",
                  "created_at": "2024-06-24T12:34:56Z",
                  "updated_at": "2024-06-24T12:34:56Z"
              }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
              "success": false,
              "message": "Failed to authenticate."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
              "success": false,
              "message": "Internal Server Error"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5vfaaVhdE6Pe38k1DZb4g6c'
    controller: null
    method: null
    route: null
    custom: []
